#!/usr/bin/env perl
# -*- mode: perl; -*-
#
# Copyright © 2023 Bahman Movaqar
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
####################################################################################################

####################################################################################################
#   # update
#
#   A simple tool to extract Makefile comments into Markdown files.
#
#   ## Arguments
#
#   * `makefile`:  The path to the source Makefile relative to the `src` directory.
#
#   ## Expected comment format
#
#   * A comment is included only if it starts with an empty `#>` line and ends with an empty `#<`
#     line.
#   * Each line of comment can have only one of the following forms
#     - an empty `#` which denotes a blank line in the Markdown.
#     - a `#` followed by exactly 3 SPACEs which denotes a non-blank Markdown line.
#     - a `#` followed by a TAB which denotes a Markdown codeblock.
#
#   A picture is worth a thousand words:  https://imgur.com/GjxZ86w
####################################################################################################

use strict;
use warnings;
use utf8;
use feature ':5.30';
use open qw/ :std :encoding(UTF-8) /;

my $infilename = shift;
my $infilepath = "${ENV{'ROOT'}}src/$infilename";

if ($infilename) {
    say "⚙️ Extracting docs for $infilepath ...";
} else {
    die "update: No input specified.";
}

open(my $infh, "<$infilepath") or die "update: $infilepath $!\n";

my $markdown_all = '';
my $inside_md = 0;
my $markdown_this_block = '';
while (my $line = <$infh>) {
    if ($inside_md) {
        if ($line =~ /^#</) {
            $inside_md = 0;
            $markdown_all .= $markdown_this_block . "\n---\n\n";
            $markdown_this_block = '';
            next;
        } elsif ($line =~ s/^#( {3}|\t)?//) {
            $markdown_this_block .= $line;
        } else {
            $inside_md = 0;
            $markdown_this_block = '';
        }
    } elsif ($line =~ /^#>/) {
        $inside_md = 1;
        next;
    }
}
close($infh);

if ($markdown_all) {
    my $outfilepath = "$infilepath.md";
    if ($infilepath =~ m#/([\w-]+)\.\w+$#) {
        $outfilepath = "${ENV{'ROOT'}}doc/$1.md";
    }

    open(my $outfh, ">$outfilepath") or die "update: $outfilepath $!\n";
    say $outfh ($markdown_all);
    close($outfh);
    say "✅ Finished creating $outfilepath.";
}
