#!/usr/bin/env bash

set -o errexit
set -o pipefail

# list of absolute paths
tests_to_run=${RUNNER_TESTS}
if [[ -z "$tests_to_run" ]]; then
  echo.error 'runner: No tests to run specificed - set the value of RUNNER_TESTS.'
  exit 1
fi

# absolute path
target_dir=${RUNNER_DIR}
if [[ -z "$target_dir" ]]; then
  echo.error 'runner: No target (temp) directory sepcified - set the value of RUNNER_DIR.'
  exit 1
fi

root_dir=${RUNNER_ROOT}
if [[ -z "$root_dir" ]]; then
  echo.error 'runner: No bmakelib root directory sepcified - set the value of RUNNER_ROOT.'
  exit 1
fi

####################################################################################################
# run_all_test_suites
#
# Globals:
#   tests_to_run
#
# Output:
#   PASSED_TEST_COUNT FAILED_TEST_COUNT
####################################################################################################
function run_all_test_suites {
  local failed_count=0
  local ok_count=0

  echo
  for t in $tests_to_run; do
    if run_a_test_suite $t; then
      ok_count=$(( $ok_count + 1 ))
    else
      failed_count=$(( $failed_count + 1 ))
    fi
    echo
  done

  echo
  echo "✅ $ok_count test(s) passed."
  echo "❌ $failed_count test(s) failed."
  [[ $failed_count -eq 0 ]] || return 1
}

####################################################################################################

source ${root_dir}tests/runner_lib.sh
run_all_test_suites
