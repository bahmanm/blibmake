#!/usr/bin/env bash
####################################################################################################
# Copyright Â© 2023 Bahman Movaqar
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
####################################################################################################

set -o pipefail

test_suite_name=$(basename $BASH_SOURCE)
source ${root_dir}tests/lib.sh

####################################################################################################
# emit an info with time the given target took to execute when timed is an implicit prerequisite.
####################################################################################################

function ok_emit_info_with_duration_implicit_prerequisite {
  local test_case_name=${FUNCNAME[0]}
  local actual_value_filename=${test_case_name}.actual.log
  bmakelib.test.cat <<EOF > Makefile
include $( perl -E 'print $ENV{"bmakelib.ROOT"}' )/bmakelib.Makefile

.PHONY : some-target

some-target :
	@echo Running some-target with implicit timed prereq...
EOF

  make some-target!timed > $actual_value_filename 2>&1

  local expected_pattern_filename=${test_case_name}.expected.pattern
  bmakelib.test.cat <<EOF > $expected_pattern_filename
make.+Entering.+
Running some-target with implicit timed prereq...
Target 'some-target' took (?<duration>\d+)ms to complete.
make.+Leaving.+
EOF

  bmakelib.test.assert_matches $test_case_name $actual_value_filename $expected_pattern_filename \
    || return 1
}

####################################################################################################
# emit an info with time the given target took to execute when timed is an explicit prerequisite.
####################################################################################################

function ok_emit_info_with_duration_explicit_prerequisite {
  local test_case_name=${FUNCNAME[0]}
  local actual_value_filename=${test_case_name}.actual.log
  bmakelib.test.cat <<EOF > Makefile
include $( perl -E 'print $ENV{"bmakelib.ROOT"}' )/bmakelib.Makefile

.PHONY : do-some-target

do-some-target :
	@echo Running do-some-target with explicit timed prereq...

.PHONY : some-target

some-target : do-some-target!timed
EOF

  make some-target > $actual_value_filename 2>&1

  local expected_pattern_filename=${test_case_name}.expected.pattern
  bmakelib.test.cat <<EOF > $expected_pattern_filename
make.+Entering.+
Running do-some-target with explicit timed prereq...
Target 'do-some-target' took (?<duration>\d+)ms to complete.
make.+Leaving.+
EOF

  bmakelib.test.assert_matches $test_case_name $actual_value_filename $expected_pattern_filename \
    || return 1
}

####################################################################################################
# do not emit any additional output if SILENT is set
####################################################################################################

function ok_no_additional_output_if_silent {
  local test_case_name=${FUNCNAME[0]}
  local actual_value_filename=${test_case_name}.actual.log
  bmakelib.test.cat <<EOF > Makefile
include $( perl -E 'print $ENV{"bmakelib.ROOT"}' )/bmakelib.Makefile

.PHONY : some-target

some-target :
	@echo Running some-target...
EOF

  make bmakelib.conf.timed.SILENT=yes some-target!timed > $actual_value_filename 2>&1

  local expected_pattern_filename=${test_case_name}.expected.pattern
  bmakelib.test.cat <<EOF > $expected_pattern_filename
make.+Entering.+
Running some-target...
make.+Leaving.+
EOF

  bmakelib.test.assert_matches $test_case_name $actual_value_filename $expected_pattern_filename \
    || return 1
}

####################################################################################################
# emit an info with time the given target took to execute when timed is an implicit prerequisite.
####################################################################################################

function ok_emit_info_when_convenience_target_is_disabled {
  local test_case_name=${FUNCNAME[0]}
  local actual_value_filename=${test_case_name}.actual.log
  bmakelib.test.cat <<EOF > Makefile
bmakelib.conf.timed.convenience-target := no

include $( perl -E 'print $ENV{"bmakelib.ROOT"}' )/bmakelib.Makefile

.PHONY : some-target

some-target :
	@echo Running some-target with implicit timed prereq...
EOF

  make some-target!bmakelib.timed > $actual_value_filename 2>&1

  local expected_pattern_filename=${test_case_name}.expected.pattern
  bmakelib.test.cat <<EOF > $expected_pattern_filename
make.+Entering.+
Running some-target with implicit timed prereq...
Target 'some-target' took (?<duration>\d+)ms to complete.
make.+Leaving.+
EOF

  bmakelib.test.assert_matches $test_case_name $actual_value_filename $expected_pattern_filename \
    || return 1
}

####################################################################################################

test_cases=( ok_emit_info_with_duration_implicit_prerequisite \
               ok_emit_info_with_duration_explicit_prerequisite \
               ok_no_additional_output_if_silent \
               ok_emit_info_when_convenience_target_is_disabled )

test_case_name=''	# mutated in the for loop
test_suite_status=0	# mutated in the for loop
for test_case in ${test_cases[@]}; do
  test_case_name=$test_case
  if ! bmakelib.test.run_test_case $test_case; then
    test_suite_status=1
  fi
done

exit $test_suite_status
